// prisma-point/schema.prisma
// 하나머니(포인트) 전용 데이터베이스 스키마

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma-point"
}

datasource db {
  provider = "mysql"
  url      = env("HANA_POINT_DATABASE_URL")
}

// 하나머니 포인트 계정
model HanaPoint {
  id          String             @id @default(cuid())
  userId      String?            @unique // 하나모아 사용자 ID (연결 전에는 null 가능)
  name        String // 이름 (필수)
  ssn         String             @unique // 주민등록번호 (필수, 고유) - 연결 기준
  phone       String // 전화번호 (참고용, 변경 가능)
  balance     Int                @default(0) // 현재 포인트 잔액
  totalEarned Int                @default(0) // 누적 적립 포인트
  totalUsed   Int                @default(0) // 누적 사용 포인트
  isLinked    Boolean            @default(false) // 하나모아 연결 여부
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
  histories   HanaPointHistory[]

  @@index([name, ssn]) // 이름 + 주민번호로 연결 (핵심!)
  @@map("hana_points")
}

// 하나머니 포인트 사용 내역
model HanaPointHistory {
  id           String    @id @default(cuid())
  pointId      String // HanaPoint ID
  type         PointType // 거래 유형
  amount       Int // 변동 포인트 (+100, -50)
  balance      Int // 변동 후 잔액
  description  String // 거래 설명
  sourceSystem String    @default("hana-moai") // 발생 시스템
  sourceId     String? // 참조 ID (주문 ID 등)
  expiresAt    DateTime? // 만료일 (적립 포인트만)
  createdAt    DateTime  @default(now())

  point HanaPoint @relation(fields: [pointId], references: [id], onDelete: Cascade)

  @@index([pointId])
  @@index([createdAt])
  @@index([type])
  @@map("hana_point_histories")
}

enum PointType {
  EARN // 적립
  USE // 사용
  EXPIRE // 만료
  REFUND // 환불
}

// 출석체크 테이블
model Attendance {
  id        String   @id @default(cuid())
  userId    String // 사용자 ID
  date      String // 출석 날짜 (YYYY-MM-DD)
  points    Int // 받은 포인트 (1-100)
  createdAt DateTime @default(now())

  @@unique([userId, date]) // 하루에 1번만 출석체크 가능
  @@index([userId])
  @@index([date])
  @@map("attendances")
}
